{"Prompt": "Sure! Here is a revised prompt that maintains the original meaning:\n\n<START>\nYour task is to validate a proposed solution for a maze. You will be given a maze layout and a sequence of moves that are claimed to solve it. Your job is to verify if the moves are valid and if they correctly solve the maze. Walls are denoted by \"#\", the start point by \"S\", and the end point by \"E\". The path taken is marked by \"+\". The rules for valid moves are as follows:\n1. Moves must not pass through walls (\"#\").\n2. Moves must begin at the start point (\"S\").\n3. Moves must conclude at the end point (\"E\").\n4. Moves must follow the provided sequence precisely.\n5. Moves must stay within the maze boundaries.\n\nYou should always output 0 (incorrect) or 1 (correct). Below are some examples of mazes and their solutions:\n\nExample 1:\nMaze:\n#S###############\n#+# #   #     # #\n#+# # # # ### # #\n#+#   #     #   #\n#+# ### # # ### #\n#+++++# # #   # #\n#####+# # ### ###\n#+++#+# # # #   #\n#+#+#+# # # #####\n#+#+++# #       #\n#+######### #####\n#+++    # # #   #\n###+### # ### # #\n#  +  # #  +++# #\n# #+#######+#+###\n# #+++++++++#+++E\n#################\nSolution:\ndown,down,down,down,right,right,right,right,down,down,down,down,left,left,up,up,left,left,down,down,down,down,right,right,down,down,down,down,right,right,right,right,right,right,right,right,up,up,right,right,down,down,right,right,right\nLabel: 0\n\nExample 2:\nMaze:\n#S#######\n#+  # # #\n#+### # #\n#+#     #\n#+# #####\n#+#+++# #\n#+#+#+# #\n#+++#+++E\n#########\nSolution:\ndown,down,down,down,down,down,right,right,up,down,right,right,down,down,right,right\nLabel: 0\n\nExample 3:\nMaze:\n#S###########\n#+# #     # #\n#+# # # ### #\n#+++# #   # #\n###+### ### #\n#  +++++++# #\n####### #+# #\n# #   #\nOutput:", "Score": 100.0, "InitialPrompt": "You are helping verify a solution to a maze. You will be given a maze, and sequence of moves that claim solving it.\nYour job is to determine whether the moves are correct and will lead to correctly solving the maze.\nYou must always output 0 (incorrect) or 1 (correct).\nWalls are denoted by \"#\", and the start and end are \"S\" and \"E\", respectively.\nGiven the data below, determine what is the most likely label for the given maze and moves; and output ONLY the label.\nData:\n\n", "OtherCandidates": [["Sure! Here is a revised prompt that maintains the original meaning:\n\n<START>\nYour task is to validate a proposed solution for a maze. You will be given a maze layout and a sequence of moves that are claimed to solve it. Your job is to verify if the moves are valid and if they correctly solve the maze. Walls are denoted by \"#\", the start point by \"S\", and the end point by \"E\". The path taken is marked by \"+\". The rules for valid moves are as follows:\n1. Moves must not pass through walls (\"#\").\n2. Moves must begin at the start point (\"S\").\n3. Moves must conclude at the end point (\"E\").\n4. Moves must follow the provided sequence precisely.\n5. Moves must stay within the maze boundaries.\n\nYou should always output 0 (incorrect) or 1 (correct). Below are some examples of mazes and their solutions:\n\nExample 1:\nMaze:\n#S###############\n#+# #   #     # #\n#+# # # # ### # #\n#+#   #     #   #\n#+# ### # # ### #\n#+++++# # #   # #\n#####+# # ### ###\n#+++#+# # # #   #\n#+#+#+# # # #####\n#+#+++# #       #\n#+######### #####\n#+++    # # #   #\n###+### # ### # #\n#  +  # #  +++# #\n# #+#######+#+###\n# #+++++++++#+++E\n#################\nSolution:\ndown,down,down,down,right,right,right,right,down,down,down,down,left,left,up,up,left,left,down,down,down,down,right,right,down,down,down,down,right,right,right,right,right,right,right,right,up,up,right,right,down,down,right,right,right\nLabel: 0\n\nExample 2:\nMaze:\n#S#######\n#+  # # #\n#+### # #\n#+#     #\n#+# #####\n#+#+++# #\n#+#+#+# #\n#+++#+++E\n#########\nSolution:\ndown,down,down,down,down,down,right,right,up,down,right,right,down,down,right,right\nLabel: 0\n\nExample 3:\nMaze:\n#S###########\n#+# #     # #\n#+# # # ### #\n#+++# #   # #\n###+### ### #\n#  +++++++# #\n####### #+# #\n# #   #\nOutput:", 100.0], ["You are tasked with verifying a maze solution. You will receive a maze and a series of moves that purportedly solve it. Your task is to check if these moves are accurate and successfully solve the maze. Keep in mind that there can be multiple valid routes to the end 'E'. You must always output 0 (incorrect) or 1 (correct). Walls are represented by \"#\", while the start and end points are marked by \"S\" and \"E\", respectively. Based on the provided data, determine the most likely label for the given maze and moves; and output ONLY the label.\nData:\n\nOutput:", 83.33], ["You are assigned the task of validating a proposed solution to a maze. You will be provided with a maze layout and a sequence of moves that are claimed to solve it. Your job is to verify if the moves are valid and if they correctly solve the maze. You should always output 0 (incorrect) or 1 (correct). Walls are denoted by \"#\", and the start and end points are marked by \"S\" and \"E\", respectively. Below are some examples of mazes and their solutions:\n\nExample 1:\nMaze:\n#S###############\n#+# #   #     # #\n#+# # # # ### # #\n#+#   #     #   #\n#+# ### # # ### #\n#+++++# # #   # #\n#####+# # ### ###\n#+++#+# # # #   #\n#+#+#+# # # #####\n#+#+++# #       #\n#+######### #####\n#+++    # # #   #\n###+### # ### # #\n#  +  # #  +++# #\n# #+#######+#+###\n# #+++++++++#+++E\n#################\nSolution:\ndown,down,down,down,right,right,right,right,down,down,down,down,left,left,up,up,left,left,down,down,down,down,right,right,down,down,down,down,right,right,right,right,right,right,right,right,up,up,right,right,down,down,right,right,right\nLabel: 0\n\nExample 2:\nMaze:\n#S#######\n#+  # # #\n#+### # #\n#+#     #\n#+# #####\n#+#+++# #\n#+#+#+# #\n#+++#+++E\n#########\nSolution:\ndown,down,down,down,down,down,right,right,up,down,right,right,down,down,right,right\nLabel: 0\n\nExample 3:\nMaze:\n#S###########\n#+# #     # #\n#+# # # ### #\n#+++# #   # #\n###+### ### #\n#  +++++++# #\n####### #+# #\n# #   # #+  #\n# ### ###+###\n#     #+++  #\n# ### #+#####\n#   #  +++++E\n#############\nSolution:\ndown,down,right,right,down,down,right,right,right,right,right,right,down,down,down,down,down,left,down,down,right,right,right,right\nLabel: 0\n\nExample 4:\nMaze:\n#S###########\n#+#", 66.67], ["You are assigned the task of validating a proposed solution to a maze. You will be given a maze layout and a sequence of moves that are claimed to solve it. Your job is to verify if the moves are valid and if they correctly solve the maze. You should always output 0 (incorrect) or 1 (correct). Walls are represented by \"#\", and the start and end points are marked by \"S\" and \"E\", respectively. Below are some examples of mazes and their solutions:\n\nExample 1:\nMaze:\n#S###############\n#+# #   #     # #\n#+# # # # ### # #\n#+#   #     #   #\n#+# ### # # ### #\n#+++++# # #   # #\n#####+# # ### ###\n#+++#+# # # #   #\n#+#+#+# # # #####\n#+#+++# #       #\n#+######### #####\n#+++    # # #   #\n###+### # ### # #\n#  +  # #  +++# #\n# #+#######+#+###\n# #+++++++++#+++E\n#################\nSolution:\ndown,down,down,down,right,right,right,right,down,down,down,down,left,left,up,up,left,left,down,down,down,down,right,right,down,down,down,down,right,right,right,right,right,right,right,right,up,up,right,right,down,down,right,right,right\nLabel: 0\n\nExample 2:\nMaze:\n#S#######\n#+  # # #\n#+### # #\n#+#     #\n#+# #####\n#+#+++# #\n#+#+#+# #\n#+++#+++E\n#########\nSolution:\ndown,down,down,down,down,down,right,right,up,down,right,right,down,down,right,right\nLabel: 0\n\nExample 3:\nMaze:\n#S###########\n#+# #     # #\n#+# # # ### #\n#+++# #   # #\n###+### ### #\n#  +++++++# #\n####### #+# #\n# #   # #+  #\n# ### ###+###\n#     #+++  #\n# ### #+#####\n#   #  +++++E\n#############\nSolution:\ndown,down,right,right,down,down,right,right,right,right,right,right,down,down,down,down,down,left,down,down,right,right,right,right\nLabel: 0\n\nExample 4:\nMaze:\n#S#######\n#+#     #\n", 60.0], ["<START>\nYou are provided with a maze and a sequence of moves. Your objective is to verify if the sequence of moves successfully navigates through the maze. The maze is depicted as a grid where walls are marked by \"#\", the starting point is indicated by \"S\", and the endpoint is denoted by \"E\". You should return 1 if the moves solve the maze correctly and 0 otherwise. Here are some examples:\n\nExample 1:\nMaze:\n#S###############\n#+# #   #     # #\n#+# # # # ### # #\n#+#   #     #   #\n#+# ### # # ### #\n#+++++# # #   # #\n#####+# # ### ###\n#+++#+# # # #   #\n#+#+#+# # # #####\n#+#+++# #       #\n#+######### #####\n#+++    # # #   #\n###+### # ### # #\n#  +  # #  +++# #\n# #+#######+#+###\n# #+++++++++#+++E\n#################\nSolution:\ndown,down,down,down,right,right,right,right,down,down,down,down,left,left,up,up,left,left,down,down,down,down,right,right,down,down,down,down,right,right,right,right,right,right,right,right,up,up,right,right,down,down,right,right,right\nLabel: 0\n\nExample 2:\nMaze:\n#S#######\n#+  # # #\n#+### # #\n#+#     #\n#+# #####\n#+#+++# #\n#+#+#+# #\n#+++#+++E\n#########\nSolution:\ndown,down,down,down,down,down,right,right,up,down,right,right,down,down,right,right\nLabel: 0\n\nExample 3:\nMaze:\n#S###########\n#+# #     # #\n#+# # # ### #\n#+++# #   # #\n###+### ### #\n#  +++++++# #\n####### #+# #\n# #   # #+  #\n# ### ###+###\n#     #+++  #\n# ### #+#####\n#   #  +++++E\n#############\nSolution:\ndown,down,right,right,down,down,right,right,right,right,right,right,down,down,down,down,down,left,down,down,right,right,right,right\nLabel: 0\n\nExample 4:\nMaze:\n#S###########\n#+#\nSolution:\nright,right,down,down,right,right,down,down,down", 50.0], ["<START>\nYou are tasked with verifying a proposed solution to a maze. You will receive a maze layout and a sequence of moves that are claimed to solve it. Your responsibility is to check if the moves are valid and if they correctly solve the maze. You should always output 0 (incorrect) or 1 (correct). Walls are represented by \"#\", and the start and end points are marked by \"S\" and \"E\", respectively. Below are some examples of mazes and their solutions:\n\nExample 1:\nMaze:\n#S###############\n#+# #   #     # #\n#+# # # # ### # #\n#+#   #     #   #\n#+# ### # # ### #\n#+++++# # #   # #\n#####+# # ### ###\n#+++#+# # # #   #\n#+#+#+# # # #####\n#+#+++# #       #\n#+######### #####\n#+++    # # #   #\n###+### # ### # #\n#  +  # #  +++# #\n# #+#######+#+###\n# #+++++++++#+++E\n#################\nSolution:\ndown,down,down,down,right,right,right,right,down,down,down,down,left,left,up,up,left,left,down,down,down,down,right,right,down,down,down,down,right,right,right,right,right,right,right,right,up,up,right,right,down,down,right,right,right\nLabel: 0\n\nExample 2:\nMaze:\n#S#######\n#+  # # #\n#+### # #\n#+#     #\n#+# #####\n#+#+++# #\n#+#+#+# #\n#+++#+++E\n#########\nSolution:\ndown,down,down,down,down,down,right,right,up,down,right,right,down,down,right,right\nLabel: 0\n\nExample 3:\nMaze:\n#S###########\n#+# #     # #\n#+# # # ### #\n#+++# #   # #\n###+### ### #\n#  +++++++# #\n####### #+# #\n# #   # #+  #\n# ### ###+###\n#     #+++  #\n# ### #+#####\n#   #  +++++E\n#############\nSolution:\ndown,down,right,right,down,down,right,right,right,right,right,right,down,down,down,down,down,left,down,down,right,right,right,right\nLabel: 0\n\nExample 4:\nMaze:\n#S###########\n#+# #  ", 33.33], ["You are helping verify a solution to a maze. You will be given a maze, and sequence of moves that claim solving it.\nYour job is to determine whether the moves are correct and will lead to correctly solving the maze.\nYou must always output 0 (incorrect) or 1 (correct).\nWalls are denoted by \"#\", and the start and end are \"S\" and \"E\", respectively.\nGiven the data below, determine what is the most likely label for the given maze and moves; and output ONLY the label.\nData:\n\n", 0]], "Problem": "maze_solve"}